#!/bin/bash

HASH="%C(yellow)%h%C(reset)"
RELATIVE_TIME="%C(green)(%ar)%C(reset)"
AUTHOR="%C(blue)<%an>%C(reset)"
REFS="%C(auto)%d%C(reset)"
SUBJECT="%s"

ANSI_CYAN='\033[36m'
ANSI_RESET='\033[0m'

FORMAT="$HASH}$RELATIVE_TIME<time>}$AUTHOR<author>}$REFS $SUBJECT"

show_git_head() {
    pretty_git_log -1
    git show -p --pretty="tformat:"
}

pretty_git_log() {
    git log --color --graph --abbrev-commit --date=relative --pretty="tformat:${FORMAT}" $* |
        # Replace (2 years, 5 months) with (2 years)
        sed -E -e 's/\(([[:digit:]]+) ([[:alpha:]]+).* ago\)/(\1 \2)/' |
        # Color merge commits specially
        sed -Ee "s/(Merge (branch|remote-tracking branch|pull request) .*$)/$(printf $ANSI_CYAN)\1$(printf $ANSI_RESET)/" |
        awk '
          BEGIN { FS = "}"; OFS = "}" }
          function strip(str) {
            gsub(/\x1B\[[0-9;]*[mK]/, "", str)
            return str
          }
          { print $1, "<" strip($1) FS ">" $2, $3, $4 }
        ' |
        column -s '}' -t |
        awk '{
          match($0, /<[^>]*>/)
          stripped = substr($0, RSTART + 1, RLENGTH - 2)
          graph    = substr($0, 1, RSTART - 1)
          line     = substr($0, RSTART + RLENGTH)

          match(stripped, / *$/)
          trailing_spaces = RLENGTH

          match(graph, / *$/)
          graph = substr(graph, 1, RSTART + trailing_spaces - 2)

          sub(/<time> /, "", line)
          sub(/<author>  /, "", line)

          print graph line
        }' |
        less --quit-if-one-screen --no-init --RAW-CONTROL-CHARS --chop-long-lines
}
